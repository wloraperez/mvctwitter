//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("BDTwitter", "FK_Tweets_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(mvcTwitter.Models.User), "Tweets", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mvcTwitter.Models.Tweet), true)]
[assembly: EdmRelationshipAttribute("BDTwitter", "Follows", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mvcTwitter.Models.User), "Users1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mvcTwitter.Models.User))]

#endregion

namespace mvcTwitter.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class BDTwitterEntities1 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new BDTwitterEntities1 object using the connection string found in the 'BDTwitterEntities1' section of the application configuration file.
        /// </summary>
        public BDTwitterEntities1() : base("name=BDTwitterEntities1", "BDTwitterEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BDTwitterEntities1 object.
        /// </summary>
        public BDTwitterEntities1(string connectionString) : base(connectionString, "BDTwitterEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BDTwitterEntities1 object.
        /// </summary>
        public BDTwitterEntities1(EntityConnection connection) : base(connection, "BDTwitterEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tweet> Tweets
        {
            get
            {
                if ((_Tweets == null))
                {
                    _Tweets = base.CreateObjectSet<Tweet>("Tweets");
                }
                return _Tweets;
            }
        }
        private ObjectSet<Tweet> _Tweets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tweets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTweets(Tweet tweet)
        {
            base.AddObject("Tweets", tweet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user">No Metadata Documentation available.</param>
        public ObjectResult<User> getFollowedUsers(Nullable<global::System.Int32> user)
        {
            ObjectParameter userParameter;
            if (user.HasValue)
            {
                userParameter = new ObjectParameter("User", user);
            }
            else
            {
                userParameter = new ObjectParameter("User", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<User>("getFollowedUsers", userParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="user">No Metadata Documentation available.</param>
        public ObjectResult<User> getFollowedUsers(Nullable<global::System.Int32> user, MergeOption mergeOption)
        {
            ObjectParameter userParameter;
            if (user.HasValue)
            {
                userParameter = new ObjectParameter("User", user);
            }
            else
            {
                userParameter = new ObjectParameter("User", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<User>("getFollowedUsers", mergeOption, userParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="follower">No Metadata Documentation available.</param>
        /// <param name="folloed">No Metadata Documentation available.</param>
        public int spSetFolloweds(Nullable<global::System.Int32> follower, Nullable<global::System.Int32> folloed)
        {
            ObjectParameter followerParameter;
            if (follower.HasValue)
            {
                followerParameter = new ObjectParameter("follower", follower);
            }
            else
            {
                followerParameter = new ObjectParameter("follower", typeof(global::System.Int32));
            }
    
            ObjectParameter folloedParameter;
            if (folloed.HasValue)
            {
                folloedParameter = new ObjectParameter("folloed", folloed);
            }
            else
            {
                folloedParameter = new ObjectParameter("folloed", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("spSetFolloweds", followerParameter, folloedParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userid">No Metadata Documentation available.</param>
        public ObjectResult<User> get_NotFollowed(Nullable<global::System.Int32> userid)
        {
            ObjectParameter useridParameter;
            if (userid.HasValue)
            {
                useridParameter = new ObjectParameter("userid", userid);
            }
            else
            {
                useridParameter = new ObjectParameter("userid", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<User>("get_NotFollowed", useridParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="userid">No Metadata Documentation available.</param>
        public ObjectResult<User> get_NotFollowed(Nullable<global::System.Int32> userid, MergeOption mergeOption)
        {
            ObjectParameter useridParameter;
            if (userid.HasValue)
            {
                useridParameter = new ObjectParameter("userid", userid);
            }
            else
            {
                useridParameter = new ObjectParameter("userid", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<User>("get_NotFollowed", mergeOption, useridParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="follower">No Metadata Documentation available.</param>
        /// <param name="followed">No Metadata Documentation available.</param>
        public int sp_deleteFollow(Nullable<global::System.Int32> follower, Nullable<global::System.Int32> followed)
        {
            ObjectParameter followerParameter;
            if (follower.HasValue)
            {
                followerParameter = new ObjectParameter("follower", follower);
            }
            else
            {
                followerParameter = new ObjectParameter("follower", typeof(global::System.Int32));
            }
    
            ObjectParameter followedParameter;
            if (followed.HasValue)
            {
                followedParameter = new ObjectParameter("followed", followed);
            }
            else
            {
                followedParameter = new ObjectParameter("followed", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_deleteFollow", followerParameter, followedParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BDTwitter", Name="Tweet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tweet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tweet object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="post">Initial value of the Post property.</param>
        /// <param name="postDate">Initial value of the PostDate property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static Tweet CreateTweet(global::System.Int64 id, global::System.String post, global::System.DateTime postDate, global::System.Int32 userID)
        {
            Tweet tweet = new Tweet();
            tweet.id = id;
            tweet.Post = post;
            tweet.PostDate = postDate;
            tweet.UserID = userID;
            return tweet;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Post
        {
            get
            {
                return _Post;
            }
            set
            {
                OnPostChanging(value);
                ReportPropertyChanging("Post");
                _Post = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Post");
                OnPostChanged();
            }
        }
        private global::System.String _Post;
        partial void OnPostChanging(global::System.String value);
        partial void OnPostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PostDate
        {
            get
            {
                return _PostDate;
            }
            set
            {
                OnPostDateChanging(value);
                ReportPropertyChanging("PostDate");
                _PostDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostDate");
                OnPostDateChanged();
            }
        }
        private global::System.DateTime _PostDate;
        partial void OnPostDateChanging(global::System.DateTime value);
        partial void OnPostDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BDTwitter", "FK_Tweets_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BDTwitter.FK_Tweets_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BDTwitter.FK_Tweets_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BDTwitter.FK_Tweets_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BDTwitter.FK_Tweets_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BDTwitter", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static User CreateUser(global::System.Int32 id)
        {
            User user = new User();
            user.id = id;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BDTwitter", "FK_Tweets_Users", "Tweets")]
        public EntityCollection<Tweet> Tweets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tweet>("BDTwitter.FK_Tweets_Users", "Tweets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tweet>("BDTwitter.FK_Tweets_Users", "Tweets", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BDTwitter", "Follows", "Users1")]
        public EntityCollection<User> Followed
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("BDTwitter.Follows", "Users1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("BDTwitter.Follows", "Users1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BDTwitter", "Follows", "Users")]
        public EntityCollection<User> Followers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("BDTwitter.Follows", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("BDTwitter.Follows", "Users", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
